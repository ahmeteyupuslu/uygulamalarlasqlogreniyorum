/* 
SUM COUNT MIN MAX AVG
---
SELECT
SUM (PRICE), COUNT(ID), MIN(PRICE), MAX(PRICE), AVG(PRICE)
FROM TABLOADI
----
*/

SELECT SUM(LINENET) FROM SALES WHERE BRANCH='Kocaeli Subesi'
SELECT SUM(LINENET), COUNT(*) FROM SALES WHERE BRANCH='Kocaeli Subesi'
SELECT SUM(LINENET), COUNT(*), MIN(LINENET), MAX(LINENET) FROM SALES WHERE BRANCH='Kocaeli Subesi'

/* LINENET ürün satış fiyatını gösteriyor. */

SELECT SUM(LINENET) AS TOPLAMSATIS, COUNT(*) AS SATIRSAYISI, MIN(LINENET) AS ENUCUZFIYAT, MAX(LINENET) AS ENPAHALIFIYAT FROM SALES WHERE BRANCH='Kocaeli Subesi'

/* blabla AS ALANADI    yaparak gelen alanların üstüne isim ekledik. */


SELECT
BRANCH,
SUM(LINENET) AS TOPLAMSATIS,
COUNT(*) AS SATIRSAYISI,
MIN(LINENET) AS ENDUSUKFIYAT,
MAX(LINENET) AS ENYUKSEKFIYAT,
AVG(LINENET) AS ORTALAMASATISFIYATI
FROM SALES
GROUP BY BRANCH

--GROUP BY İLE HER BİR ŞUBENİN YUKARIDAKİ DEĞERLERİNİ GETİRİR.




SELECT BRANCH AS SUBEADI, SUM(LINENET) AS TOPLAMSATIS
FROM SALES
GROUP BY BRANCH ORDER BY SUM(LINENET) DESC
--şubelerin satışlarını topladı ve yüksekten azalacak şekilde sıraladı



SELECT TOP 10 BRANCH AS SUBEADI, SUM(LINENET) AS TOPLAMSATIS
FROM SALES
GROUP BY BRANCH ORDER BY SUM(LINENET) DESC
--aynı işlem yapıldı sadece en yüksek 10 şube gösterildi


SELECT BRANCH AS SUBEADI, SUM(LINENET) AS TOPLAMSATIS
FROM SALES
GROUP BY BRANCH
HAVING SUM(LINENET)>50000
ORDER BY SUM(LINENET) DESC
--toplam satışı 50binden büyük olan mağazaları getir. WHERE değil HAVING kullanılır.






  
